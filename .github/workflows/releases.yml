name: Daily Release

on:
  schedule:
    - cron: "0 2 * * *"  # Chạy mỗi ngày lúc 02:00 AM UTC
  workflow_dispatch:  # Cho phép chạy thủ công nếu cần
  push:
    branches:
      - master  # Chạy nếu có commit mới vào nhánh master

jobs:
  check-changes:
    name: Check for new user commits
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Check for new commits from users
        id: check
        run: |
          NEW_COMMITS=$(git log --pretty=format:"%h %s" -n 10 | grep -Ev "chore\(release\): update changelog" | wc -l || echo 0)

          if [[ "$NEW_COMMITS" -gt 0 ]]; then
            echo "✅ Có $NEW_COMMITS commit mới từ người dùng. Tiến hành release!"
            echo "has_changes=true" >> $GITHUB_ENV
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Không có commit hợp lệ mới từ người dùng. Bỏ qua release!"
            echo "has_changes=false" >> $GITHUB_ENV
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

  release:
    name: Create GitHub Release (No Tag)
    needs: check-changes
    if: needs.check-changes.outputs.has_changes == 'true'  # Chỉ chạy nếu có commit từ người dùng
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Generate Changelog from All Commits (with JIRA links)
        run: |
          echo "## Changelog - $(date +%Y-%m-%d)" > CHANGELOG.md
          echo "" >> CHANGELOG.md

          git log --pretty=format:"%h %s" -n 20 | while read -r line; do
            COMMIT_ID=$(echo $line | awk '{print $1}')
            MESSAGE=$(echo $line | cut -d' ' -f2-)

            if [[ $MESSAGE =~ (FC-[0-9]+) ]]; then
              JIRA_KEY="${BASH_REMATCH[1]}"
              JIRA_URL="[${JIRA_KEY}](https://fordeer.atlassian.net/browse/${JIRA_KEY})"
              FORMATTED_MESSAGE="${MESSAGE//$JIRA_KEY/$JIRA_URL}"
              echo "- $FORMATTED_MESSAGE ($COMMIT_ID)" >> CHANGELOG.md
            else
              echo "- $MESSAGE ($COMMIT_ID)" >> CHANGELOG.md
            fi
          done
          
          echo "" >> CHANGELOG.md
          cat CHANGELOG.md
        shell: bash

      - name: Commit & Push Changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "Release Bot"
          git config --global user.email "release-bot@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore(release): update changelog"
          git push origin master
        shell: bash

      - name: Read Changelog Content
        id: changelog
        run: |
          CHANGELOG_CONTENT=$(cat CHANGELOG.md)
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG_CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      - name: Create GitHub Release using `rymndhng/release-on-push-action`
        uses: rymndhng/release-on-push-action@master
        with:
          release_name: "Latest Release"
          release_body: "${{ env.RELEASE_BODY }}"
          draft: false
          prerelease: false
          bump_version_scheme: minor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
